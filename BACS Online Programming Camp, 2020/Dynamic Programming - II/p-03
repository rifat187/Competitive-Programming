/*
A boy wants to rob bank.He wants to make calculated risk and grab as much
money as possible. But his frieends-Hermoine and Ron decide upon a toleraable
probability P of getting caught.They feel that he is safe enough if the 
banks he robs together give a probability less than P.
n<=100

*/

/*    ***Bismillahir Rahmanir Rahim***   */
#include<bits/stdc++.h>
using namespace std;
typedef       long long int   ll;
typedef      long double   ld;
typedef     vector<ll>      vll;
#define     fi              first
#define     print(v)        for(ll i:v) cout<<i<<ss
#define     se              second
#define     pb              push_back
#define     nn              "\n"
#define     mem(dp)         memset(dp,-1,sizeof(dp))
#define     all(p)          p.begin(),p.end()
#define     zz(v)           (ll)v.size()
#define     S(a)            scanf("%lld",&a)
#define     SS(a,b)         scanf("%lld %lld",&a,&b)
#define     SSS(a,b,c)      scanf("%lld %lld %lld",&a,&b,&c)
#define     ss              ' '
#define     pii             pair<ll,ll>
#define     gcd(a,b)        __gcd(a,b)
#define     lcm(a,b)        (a*b)/gcd(a,b)
const double eps = 1e-7;


double dp[105][10005];
double caught[105];
ll money[105],n;
ll vis[105][10005];

double go(ll i,ll m)
{
    if(i==n+1)
    {
        if(money==0)
            return 1.0;
        else
            return 0.0;
    }

    if(vis[i][m])
        return dp[i][m];

    vis[i][m]=1;

    double res = go(i+1,m);

    if(m-money[i]>=0)
    {
        res = max(res,(1.0-caught[i])*go(i+1,m-money[i]));
    }

    return dp[i][m]=res;


}

int main()
{
    ll t;
    cin>>t;
    while(t--)
    {
        memset(vis,0,sizeof(vis));
        double p;
        cin>>p>>n;
        ll tot=0;
        for(ll i=1; i<=n; i++)
        {
            cin>>money[i]>>caught[i];
            tot+=money[i];
        }

        ll ans=0;

        for(ll i=1; i<=tot; i++)
        {
            // call dp for is it possible get money i with maximum
            // possible not caught probability
            if(1.0-go(1,i)<p+eps)
                ans=max(ans,i);
        }

        cout<<ans<<nn;

    }



}
