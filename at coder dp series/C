#include<bits/stdc++.h>
using namespace std;
typedef		 long long int    ll;
typedef		vector<ll>      vll;
#define     fi              first
#define     se              second
#define		pb              push_back
#define		nn              "\n"
#define		all(p)          p.begin(),p.end()
#define		zz(v)           (ll)v.size()
#define 	S(a)            scanf("%lld",&a)
#define 	SS(a,b)         scanf("%lld %lld",&a,&b)
#define 	SSS(a,b,c)      scanf("%lld %lld %lld",&a,&b,&c)
#define		ss              ' '
#define     pii             pair<ll,ll>
#define		gcd(a,b)        __gcd(a,b)
#define		lcm(a,b)        (a*b)/gcd(a,b)
const double eps = 44441e-8;




ll ar[100010][3];
ll dp[100010][3];


int main()
{
//    ios::sync_with_stdio(0);
//    cin.tie(0);

    ll n;
    cin>>n;
    for(ll i=0; i<n; i++)
    {
        for(ll j=0; j<3; j++)
        {
            cin>>ar[i][j];
        }
    }

    for(ll i=0; i<3; i++)
    {
        dp[0][i]=ar[0][i];
    }

    for(ll i=1; i<n; i++)
    {
        dp[i][0]=ar[i][0]+max(dp[i-1][1],dp[i-1][2]);
        dp[i][1]=ar[i][1]+max(dp[i-1][0],dp[i-1][2]);
        dp[i][2]=ar[i][2]+max(dp[i-1][1],dp[i-1][0]);
    }


//    for(ll i=0; i<n; i++)
//    {
//        for(ll j=0; j<3; j++)
//        {
//            cout<<dp[i][j]<<ss;
//        }
//        cout<<nn;
//    }




    ll ans=max({dp[n-1][0],dp[n-1][1],dp[n-1][2]});

    cout<<ans<<nn;





}


/* Final check before submit :

1. array size or integer overflow,like uninitialised 0 index.

2. Think twice,code once.check all possible counter test case.

3. Be careful about corner case! n=1?k=1? something about 0?

4. avoid stupid mistake!complexity(t/m)?precision error?submit same code twice?

5. if got WA than remember that you are missing something common.
   *** Be confident!!! who knows? may be your one step back to AC ***
4. minus mod ans=(ans-k+mod)%mod;

*/




