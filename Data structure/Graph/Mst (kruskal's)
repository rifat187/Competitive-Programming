#include<bits/stdc++.h>
using namespace std;
typedef      long long int    ll;
typedef      long double   ld;
typedef     vector<ll>      vll;
#define     fi              first
#define     print(v)        for(ll i:v) cout<<i<<ss
#define     se              second
#define     pb              push_back
#define     nn              "\n"
#define     all(p)          p.begin(),p.end()
#define     zz(v)           (ll)v.size()
#define     S(a)            scanf("%lld",&a)
#define     SS(a,b)         scanf("%lld %lld",&a,&b)
#define     SSS(a,b,c)      scanf("%lld %lld %lld",&a,&b,&c)
#define     ss              ' '
#define     pii             pair<ll,ll>
#define     gcd(a,b)        __gcd(a,b)
#define     lcm(a,b)        (a*b)/gcd(a,b)
const double eps = 1e-8;


struct edge
{
    ll a;
    ll b;
    ll w;
};

edge ar[10010];

ll pr[10000];


bool cmp(edge p1,edge p2)
{
    return p1.w<p2.w;

}

ll find(int k)
{
    if(pr[k]==-1)
        return k;

    return pr[k]=find(pr[k]);
}

void merge(ll a,ll b)
{
    pr[a]=b;
}


int main()
{
    int n,m,a,b,w;
    cin>>n>>m;

    for(ll i=1; i<=n; i++)
    {
        pr[i]=-1;
    }

    for(ll i=0; i<m; i++)
    {
        cin>>ar[i].a>>ar[i].b>>ar[i].w;

    }

    sort(ar,ar+m,cmp);
    ll sum=0;
    for(ll i=0; i<m; i++)
    {
        a=find(ar[i].a);
        b=find(ar[i].b);

        if(a!=b)
        {
            sum+=ar[i].w;
            merge(a,b);
        }
    }

    cout<<sum<<nn;

}



/* Final check before submit :

1. array size or integer overflow,like uninitialised 0 index.

2. Think twice,code once.check all possible counter test case.

3. Be careful about corner case! n=1?k=1? something about 0?

4. avoid stupid mistake!complexity(t/m)?precision error?submit same code twice?

5. if got WA than remember that you are missing something common.
   *** Be confident!!! who knows? may be your one step back to AC ***
4. minus mod ans=(ans-k+mod)%mod;

*/


