
class dsuClass
{
 
public:
 
    ll n;
    vector<ll> parent;
    vector<ll> size;
 
    ll sccCount;
 
    void init(ll n)
    {
        this->n = n;
        parent.resize(n);
        size.resize(n);
        reset();
    }
 
    void reset()
    {
        sccCount = n;
        for(ll i=0; i<n; i++) parent[i] = i;
        for(ll i=0; i<n; i++) size[i] = 1;
    }
 
    ll update(ll a)
    {
        if (parent[a] == a) return a;
        return parent[a] = update(parent[a]);
    }
 
    void join(ll a, ll b)
    {
        a = update(a);
        b = update(b);
        if (size[b] > size[a]) swap(a, b);
        if (a == b) return;
 
        size[a] += size[b];
 
        parent[b] = a;
        sccCount--;
    }
 
    ll _size(ll a)
    {
        a = update(a);
        return size[a];
    }
 
    bool isMaster(ll v)
    {
        return parent[v] == v;
    }
 
    void updateAll()
    {
        for(ll i=0; i<n; i++) update(i);
    }
};

